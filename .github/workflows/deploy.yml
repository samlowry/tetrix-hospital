name: Deploy Backend

# Trigger on specific changes
on:
  push:
    branches: [ production ]
    paths:
      - 'backend/**'
      - 'nginx/**'
      - 'docker-compose.yml'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ vars.PROD_HOST }}
    
    steps:
    - uses: actions/checkout@v3

    # Generate self-signed SSL certificate for initial setup
    - name: Generate SSL Certificate
      run: |
        mkdir -p nginx/ssl
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -keyout nginx/ssl/private.key \
          -out nginx/ssl/certificate.crt \
          -subj "/C=US/ST=CA/L=SF/O=TetrixHospital/CN=${PROD_HOST}"
        chmod 644 nginx/ssl/private.key nginx/ssl/certificate.crt

    - name: Initial Server Setup
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.PROD_HOST }}
        username: root
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          # Install Docker if not exists
          if ! command -v docker &> /dev/null; then
            apt update && apt install -y docker.io docker-compose
          fi
          
          # Create required directories
          mkdir -p /opt/tetrix-hospital/nginx/ssl
          mkdir -p /opt/tetrix-hospital/logs/redis
          
          # Setup git and pull code
          cd /opt/tetrix-hospital
          git init
          git config --global --add safe.directory /opt/tetrix-hospital
          git remote add origin https://github.com/${GITHUB_REPOSITORY}.git || git remote set-url origin https://github.com/${GITHUB_REPOSITORY}.git
          
          # Save environment variables
          cat > .env << EOL
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          BACKEND_URL=${{ vars.BACKEND_URL }}
          FRONTEND_URL=${{ vars.FRONTEND_URL }}
          EOL

    - name: Copy SSL Certificates
      uses: appleboy/scp-action@master
      with:
        host: ${{ vars.PROD_HOST }}
        username: root
        key: ${{ secrets.PROD_SSH_KEY }}
        source: "nginx/ssl/*"
        target: "/opt/tetrix-hospital/nginx/ssl"
        strip_components: 2

    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.PROD_HOST }}
        username: root
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          cd /opt/tetrix-hospital
          git fetch origin production
          git reset --hard origin/production
          
          # Build and update services
          if [[ $(git diff --name-only HEAD HEAD~1 | grep -c "^backend/") -gt 0 ]]; then
            echo "Building and updating backend service..."
            docker-compose up -d --build app
          fi
          
          if [[ $(git diff --name-only HEAD HEAD~1 | grep -c "^nginx/") -gt 0 ]]; then
            echo "Building and updating nginx service..."
            docker-compose up -d --build nginx
          fi
          
          # Clean only dangling images
          docker image prune -f

    # Verify deployment with retries
    - name: Check deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.PROD_HOST }}
        username: root
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          cd /opt/tetrix-hospital
          for i in {1..30}; do
            if curl -f "http://localhost:5000/health"; then
              echo "All services are healthy"
              exit 0
            fi
            echo "Waiting for services to be healthy... ($i/30)"
            sleep 2
          done
          echo "Services failed to become healthy"
          exit 1

    # Required GitHub configuration:
    #
    # Action Secrets (sensitive data):
    # - PROD_SSH_KEY: SSH private key for production server
    # - JWT_SECRET_KEY: JWT secret key for backend auth
    # - TELEGRAM_BOT_TOKEN: Telegram bot token from @BotFather
    #
    # Action Variables (non-sensitive):
    # - PROD_HOST: Production server IP
    # - BACKEND_URL: Backend URL (e.g., https://api.tetrix.lol)
    # - FRONTEND_URL: Frontend URL (e.g., https://webapp.tetrix.lol)