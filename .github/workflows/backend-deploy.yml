name: Deploy Backend

# Trigger on main branch changes to backend code
on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'docker-compose.prod.yml'
      - '.github/workflows/backend-deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Required secrets:
    # - DOCKER_HUB_USERNAME: Your Docker Hub username
    # - DOCKER_HUB_TOKEN: Docker Hub access token
    # - PROD_HOST: Production server IP/domain
    # - PROD_USERNAME: SSH username
    # - PROD_SSH_KEY: SSH private key
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov

    - name: Run tests
      run: |
        cd backend
        pytest --cov=. --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Docker Hub authentication
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/tetrix-hospital-backend:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/tetrix-hospital-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/tetrix-hospital-backend:buildcache,mode=max

    # Deploy to production server
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          cd /opt/tetrix-hospital
          docker-compose -f docker-compose.prod.yml pull app
          docker-compose -f docker-compose.prod.yml up -d app
          docker system prune -f

    # Verify deployment
    - name: Check deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          curl -f http://localhost:5000/health || exit 1